[{"D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\index.js":"1","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\App.js":"2","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\reportWebVitals.js":"3","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\canvas\\canvas.js":"4","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\socket\\socket.js":"5","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\redux\\store.js":"6","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\redux\\actions\\actions.js":"7","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\config\\keys.js":"8","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\members\\members.js":"9","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\main\\main.js":"10","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\redux\\reducers\\member.js":"11","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\redux\\reducers\\reducerUtils.js":"12","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\enter\\enter.js":"13","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\header\\title.js":"14"},{"size":422,"mtime":1634206912572,"results":"15","hashOfConfig":"16"},{"size":431,"mtime":1634206931935,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499166100000,"results":"18","hashOfConfig":"16"},{"size":3664,"mtime":1634290170498,"results":"19","hashOfConfig":"16"},{"size":392,"mtime":1634206895811,"results":"20","hashOfConfig":"16"},{"size":358,"mtime":1634206890668,"results":"21","hashOfConfig":"16"},{"size":451,"mtime":1634206868451,"results":"22","hashOfConfig":"16"},{"size":79,"mtime":1634291166322,"results":"23","hashOfConfig":"16"},{"size":1355,"mtime":1634241804852,"results":"24","hashOfConfig":"16"},{"size":429,"mtime":1634206817769,"results":"25","hashOfConfig":"16"},{"size":1013,"mtime":1634251480164,"results":"26","hashOfConfig":"16"},{"size":340,"mtime":1634206885678,"results":"27","hashOfConfig":"16"},{"size":1321,"mtime":1634206782649,"results":"28","hashOfConfig":"16"},{"size":419,"mtime":1634206801922,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"a38u2b",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\index.js",[],["62","63"],"D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\App.js",[],"D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\reportWebVitals.js",[],"D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\canvas\\canvas.js",["64","65","66"],"import React, { useState, useEffect } from \"react\";\r\nimport { HuePicker } from \"react-color\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./canvas.css\";\r\n\r\nimport { Stage, Layer, Line, Text } from \"react-konva\";\r\n\r\nimport { socketRef } from \"../socket/socket\";\r\n\r\nfunction Canvas() {\r\n  const [tool, setTool] = useState(\"pen\");\r\n  const [colorPen, setColorPen] = useState(\"#000000\");\r\n  const [shardDraw, setShardDraw] = useState();\r\n  const [lines, setLines] = useState([]);\r\n\r\n  const isDrawing = React.useRef(false);\r\n\r\n  const name = useSelector((state) => state.member.name);\r\n  const update = useSelector((state) => state.member.update);\r\n  const nameToVisible = useSelector((state) => state.member.nameToVisible);\r\n\r\n  let lastLine;\r\n\r\n  useEffect(() => {\r\n    let xlines = lines;\r\n    xlines.find((line, i) => {\r\n      if (line.name === nameToVisible) {\r\n        line.visable = !line.visable;\r\n        xlines[i].visable = line.visable;\r\n        setLines(xlines);\r\n      }\r\n    });\r\n  }, [update]);\r\n\r\n  socketRef.on(\"drawingListener\", (lines1) => {\r\n    setLines(lines1);\r\n  });\r\n\r\n  const handleMouseDown = (e) => {\r\n    isDrawing.current = true;\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    setLines([...lines, { tool, points: [pos.x, pos.y] }]);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing.current) {\r\n      return;\r\n    }\r\n    const stage = e.target.getStage();\r\n    const point = stage.getPointerPosition();\r\n\r\n    lastLine = lines[lines.length - 1];\r\n    lastLine.color = colorPen;\r\n    lastLine.name = name;\r\n\r\n    // add point\r\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\r\n    lastLine.visable = true;\r\n    setShardDraw(lastLine.points);\r\n    socketRef.emit(\"sendDraw\", lines);\r\n    // event\r\n\r\n    // replace last\r\n    lines.splice(lines.length - 1, 1, lastLine);\r\n    setLines(lines.concat());\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    isDrawing.current = false;\r\n  };\r\n  const handleMouseOut = () => {\r\n    isDrawing.current = false;\r\n    // alert(\"out\")\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setColorPen(color.hex);\r\n  };\r\n\r\n  const clearLayer = () => {\r\n    setLines([])\r\n  }\r\n\r\n  return (\r\n     <div>\r\n      <select\r\n        className=\"select_canvas\"\r\n        value={tool}\r\n        onChange={(e) => {\r\n          setTool(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"pen\">Pen</option>\r\n        <option value=\"eraser\">Eraser</option>\r\n      </select>\r\n      <button onClick={() => {clearLayer()}}>Clear All</button>\r\n      <Stage\r\n        className=\"stage_canvas\"\r\n        width={165}\r\n        height={180}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        onMouseLeave={handleMouseOut}\r\n      >\r\n        <Layer>\r\n          <Text text=\"Just start drawing\" x={5} y={30} />\r\n          {lines.map((line, i) => (\r\n            <>\r\n              <Line\r\n                key={i}\r\n                points={line.points}\r\n                stroke={line.color}\r\n                strokeWidth={5}\r\n                tension={0.5}\r\n                visible={line.visable}\r\n                lineCap=\"round\"\r\n                globalCompositeOperation={\r\n                  line.tool === \"eraser\" ? \"destination-out\" : \"source-over\"\r\n                }\r\n              />\r\n            </>\r\n          ))}\r\n        </Layer>\r\n      </Stage>\r\n      <HuePicker\r\n        className=\"picker_canvas\"\r\n        color={colorPen}\r\n        onChangeComplete={handleChangeComplete}\r\n      />\r\n      <canvas style={{border:\"red 5px\", width:\"20px\"}}></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\socket\\socket.js",[],"D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\redux\\store.js",[],"D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\redux\\actions\\actions.js",[],"D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\config\\keys.js",[],"D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\members\\members.js",["67","68","69"],"import React, { useState } from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { socketRef } from \"../socket/socket\";\r\nimport { actions } from \"../redux/actions/actions\";\r\n\r\nfunction Members() {\r\n  const dispatch = useDispatch();\r\n\r\n  const setMembersToStore = (member) => {\r\n    dispatch(actions.setDisableMember(member.name));\r\n    dispatch(actions.setLinesDisable(member.name));\r\n  };\r\n\r\n  socketRef.on(\"newMember\", (arrNames) => {\r\n    dispatch(actions.setMembers(arrNames));\r\n  });\r\n\r\n  const members = useSelector((state) => state.member.members);\r\n  const name = useSelector((state) => state.member.name);\r\n  const memberColor = useSelector((state) => state.member.memberColor);\r\n\r\n  return (\r\n    <ListGroup as=\"ul\">\r\n      {members.map((member) => {\r\n        if (member.name != name) {\r\n          return (\r\n            <div>\r\n                <ListGroup.Item\r\n                  as=\"li\"\r\n                  style={{ backgroundColor: memberColor, cursor: \"pointer\" }}\r\n                  onClick={(e) => {\r\n                    setMembersToStore(member);\r\n                  }}\r\n                >\r\n                  {member.name}\r\n                </ListGroup.Item>\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nexport default Members;","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\main\\main.js",[],"D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\redux\\reducers\\member.js",["70"],"import produce from \"immer\";\r\nimport createReducer from \"./reducerUtils\";\r\n\r\nconst initalStaste = {\r\n  name: \"\",\r\n  members: [],\r\n  MemberLines: [],\r\n  lines: [],\r\n  update: true,\r\n  nameToVisible: \"\",\r\n  memberColor:\"\"\r\n};\r\n\r\nconst contacts = {\r\n  setName(state, action) {\r\n    state.name = action.payload;\r\n  },\r\n  setLines(state, action) {\r\n    state.lines = action.payload;\r\n  },\r\n  setLinesDisable(state, action) {\r\n    state.update = !state.update;\r\n    state.nameToVisible = action.payload;\r\n  },\r\n  setMembers(state, action) {\r\n    state.members = action.payload;\r\n  },\r\n  setDisableMember(state, action) {\r\n    state.members.find((member) => {\r\n      if (member.name === action.payload){ \r\n        member.isDisable = !member.isDisable;\r\n      if(member.isDisable){\r\n      state.memberColor = \"gray\"\r\n      }\r\n     else{\r\n      state.memberColor = \"white\"\r\n     }\r\n     }\r\n       } );\r\n  },\r\n};\r\n\r\nexport default produce(\r\n  (state, action) => createReducer(state, action, contacts),\r\n  initalStaste\r\n);\r\n","D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\redux\\reducers\\reducerUtils.js",[],"D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\enter\\enter.js",[],"D:\\Users\\User\\Desktop\\canvas_client\\drawing\\src\\components\\header\\title.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":14,"column":10,"nodeType":"77","messageId":"78","endLine":14,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":27,"column":27,"nodeType":"81","messageId":"82","endLine":27,"endColumn":29},{"ruleId":"83","severity":1,"message":"84","line":34,"column":6,"nodeType":"85","endLine":34,"endColumn":14,"suggestions":"86"},{"ruleId":"75","severity":1,"message":"87","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"88","line":25,"column":29,"nodeType":"81","messageId":"89","endLine":25,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":26,"column":25,"nodeType":"92","messageId":"93","endLine":26,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":29,"column":33,"nodeType":"81","messageId":"82","endLine":29,"endColumn":35},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'shardDraw' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'lines' and 'nameToVisible'. Either include them or remove the dependency array.","ArrayExpression",["96"],"'useState' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [lines, nameToVisible, update]",{"range":"99","text":"100"},[1006,1014],"[lines, nameToVisible, update]"]