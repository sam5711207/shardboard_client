{"ast":null,"code":"import produce from \"immer\";\nimport createReducer from \"./reducerUtils\";\nconst initalStaste = {\n  name: \"\",\n  members: [],\n  MemberLines: [],\n  lines: [],\n  update: true,\n  nameToVisible: \"\"\n};\nconst contacts = {\n  setName(state, action) {\n    state.name = action.payload;\n  },\n\n  setLines(state, action) {\n    state.lines = action.payload;\n  },\n\n  setLinesDisable(state, action) {\n    state.update = !state.update;\n    state.nameToVisible = action.payload;\n  },\n\n  setMembers(state, action) {\n    state.members = action.payload;\n  },\n\n  setDisableMember(state, action) {\n    state.members.find(member => {\n      if (member.name === action.payload) member.isDisable = !member.isDisable;\n    });\n  }\n\n};\nexport default _c2 = produce(_c = (state, action) => createReducer(state, action, contacts), initalStaste);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$produce\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Users/User/Desktop/canvas_client/drawing/src/components/redux/reducers/member.js"],"names":["produce","createReducer","initalStaste","name","members","MemberLines","lines","update","nameToVisible","contacts","setName","state","action","payload","setLines","setLinesDisable","setMembers","setDisableMember","find","member","isDisable"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,WAAW,EAAE,EAHM;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,MAAM,EAAE,IALW;AAMnBC,EAAAA,aAAa,EAAE;AANI,CAArB;AASA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,IAAAA,KAAK,CAACR,IAAN,GAAaS,MAAM,CAACC,OAApB;AACD,GAHc;;AAIfC,EAAAA,QAAQ,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACtBD,IAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;AACD,GANc;;AAOfE,EAAAA,eAAe,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AAC7BD,IAAAA,KAAK,CAACJ,MAAN,GAAe,CAACI,KAAK,CAACJ,MAAtB;AACAI,IAAAA,KAAK,CAACH,aAAN,GAAsBI,MAAM,CAACC,OAA7B;AACD,GAVc;;AAWfG,EAAAA,UAAU,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACxBD,IAAAA,KAAK,CAACP,OAAN,GAAgBQ,MAAM,CAACC,OAAvB;AACD,GAbc;;AAcfI,EAAAA,gBAAgB,CAACN,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,IAAAA,KAAK,CAACP,OAAN,CAAcc,IAAd,CAAoBC,MAAD,IAAY;AAC7B,UAAIA,MAAM,CAAChB,IAAP,KAAgBS,MAAM,CAACC,OAA3B,EAAoCM,MAAM,CAACC,SAAP,GAAmB,CAACD,MAAM,CAACC,SAA3B;AACrC,KAFD;AAGD;;AAlBc,CAAjB;AAqBA,qBAAepB,OAAO,MACpB,CAACW,KAAD,EAAQC,MAAR,KAAmBX,aAAa,CAACU,KAAD,EAAQC,MAAR,EAAgBH,QAAhB,CADZ,EAEpBP,YAFoB,CAAtB","sourcesContent":["import produce from \"immer\";\r\nimport createReducer from \"./reducerUtils\";\r\n\r\nconst initalStaste = {\r\n  name: \"\",\r\n  members: [],\r\n  MemberLines: [],\r\n  lines: [],\r\n  update: true,\r\n  nameToVisible: \"\",\r\n};\r\n\r\nconst contacts = {\r\n  setName(state, action) {\r\n    state.name = action.payload;\r\n  },\r\n  setLines(state, action) {\r\n    state.lines = action.payload;\r\n  },\r\n  setLinesDisable(state, action) {\r\n    state.update = !state.update;\r\n    state.nameToVisible = action.payload;\r\n  },\r\n  setMembers(state, action) {\r\n    state.members = action.payload;\r\n  },\r\n  setDisableMember(state, action) {\r\n    state.members.find((member) => {\r\n      if (member.name === action.payload) member.isDisable = !member.isDisable;\r\n    });\r\n  },\r\n};\r\n\r\nexport default produce(\r\n  (state, action) => createReducer(state, action, contacts),\r\n  initalStaste\r\n);\r\n"]},"metadata":{},"sourceType":"module"}