{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\User\\\\Desktop\\\\canvas_client\\\\drawing\\\\src\\\\components\\\\canvas\\\\canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { HuePicker } from \"react-color\";\nimport { useSelector } from \"react-redux\";\nimport \"./canvas.css\";\nimport { Stage, Layer, Line, Text } from \"react-konva\";\nimport { socketRef } from \"../socket/socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Canvas() {\n  _s();\n\n  const [tool, setTool] = useState(\"pen\");\n  const [colorPen, setColorPen] = useState(\"#000000\");\n  const [setShardDraw] = useState();\n  var lastLine;\n  const name = useSelector(state => state.member.name);\n  const [lines, setLines] = useState([]);\n  const update = useSelector(state => state.member.update);\n  const nameToVisible = useSelector(state => state.member.nameToVisible);\n  useEffect(() => {\n    let xlines = lines;\n    xlines.find((line, i) => {\n      if (line.name === nameToVisible) {\n        line.visable = !line.visable;\n        xlines[i].visable = line.visable;\n        setLines(xlines);\n      }\n    });\n  }, [update]);\n  socketRef.on(\"drawingListener\", lines1 => {\n    setLines(lines1);\n  });\n\n  const handleMouseDown = e => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, {\n      tool,\n      points: [pos.x, pos.y]\n    }]);\n  };\n\n  const handleMouseMove = e => {\n    if (!isDrawing.current) {\n      return;\n    }\n\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    lastLine = lines[lines.length - 1];\n    lastLine.color = colorPen;\n    lastLine.name = name; // add point\n\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\n    lastLine.visable = true;\n    setShardDraw(lastLine.points);\n    socketRef.emit(\"sendDraw\", lines); // event\n    // replace last\n\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  const handleChangeComplete = color => {\n    setColorPen(color.hex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select_canvas\",\n      value: tool,\n      onChange: e => {\n        setTool(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pen\",\n        children: \"Pen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"eraser\",\n        children: \"Eraser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stage, {\n      className: \"stage_canvas\",\n      width: 120,\n      height: 180,\n      onMouseDown: handleMouseDown,\n      onMousemove: handleMouseMove,\n      onMouseup: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          text: \"Just start drawing\",\n          x: 5,\n          y: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), lines.map((line, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            points: line.points,\n            stroke: line.color,\n            strokeWidth: 5,\n            tension: 0.5,\n            visible: line.visable,\n            lineCap: \"round\",\n            globalCompositeOperation: line.tool === \"eraser\" ? \"destination-out\" : \"source-over\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HuePicker, {\n      className: \"picker_canvas\",\n      color: colorPen,\n      onChangeComplete: handleChangeComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Canvas, \"3645dkJTMDFv3zJkuRx0yEopPFQ=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["D:/Users/User/Desktop/canvas_client/drawing/src/components/canvas/canvas.js"],"names":["React","useState","useEffect","HuePicker","useSelector","Stage","Layer","Line","Text","socketRef","Canvas","tool","setTool","colorPen","setColorPen","setShardDraw","lastLine","name","state","member","lines","setLines","update","nameToVisible","xlines","find","line","i","visable","on","lines1","handleMouseDown","e","isDrawing","current","pos","target","getStage","getPointerPosition","points","x","y","handleMouseMove","stage","point","length","color","concat","emit","splice","handleMouseUp","handleChangeComplete","hex","value","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { HuePicker } from \"react-color\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./canvas.css\";\r\n\r\nimport { Stage, Layer, Line, Text } from \"react-konva\";\r\n\r\nimport { socketRef } from \"../socket/socket\";\r\n\r\nfunction Canvas() {\r\n  const [tool, setTool] = useState(\"pen\");\r\n  const [colorPen, setColorPen] = useState(\"#000000\");\r\n  const [setShardDraw] = useState();\r\n  var lastLine;\r\n  const name = useSelector((state) => state.member.name);\r\n  const [lines, setLines] = useState([]);\r\n  const update = useSelector((state) => state.member.update);\r\n  const nameToVisible = useSelector((state) => state.member.nameToVisible);\r\n\r\n  useEffect(() => {\r\n    let xlines = lines;\r\n    xlines.find((line, i) => {\r\n      if (line.name === nameToVisible) {\r\n        line.visable = !line.visable;\r\n        xlines[i].visable = line.visable;\r\n        setLines(xlines);\r\n      }\r\n    });\r\n  }, [update]);\r\n\r\n  socketRef.on(\"drawingListener\", (lines1) => {\r\n    setLines(lines1);\r\n  });\r\n\r\n  const handleMouseDown = (e) => {\r\n    isDrawing.current = true;\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    setLines([...lines, { tool, points: [pos.x, pos.y] }]);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing.current) {\r\n      return;\r\n    }\r\n    const stage = e.target.getStage();\r\n    const point = stage.getPointerPosition();\r\n\r\n    lastLine = lines[lines.length - 1];\r\n    lastLine.color = colorPen;\r\n    lastLine.name = name;\r\n\r\n    // add point\r\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\r\n    lastLine.visable = true;\r\n    setShardDraw(lastLine.points);\r\n    socketRef.emit(\"sendDraw\", lines);\r\n    // event\r\n\r\n    // replace last\r\n    lines.splice(lines.length - 1, 1, lastLine);\r\n    setLines(lines.concat());\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    isDrawing.current = false;\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setColorPen(color.hex);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <select\r\n        className=\"select_canvas\"\r\n        value={tool}\r\n        onChange={(e) => {\r\n          setTool(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"pen\">Pen</option>\r\n        <option value=\"eraser\">Eraser</option>\r\n      </select>\r\n      <Stage\r\n        className=\"stage_canvas\"\r\n        width={120}\r\n        height={180}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n      >\r\n        <Layer>\r\n          <Text text=\"Just start drawing\" x={5} y={30} />\r\n          {lines.map((line, i) => (\r\n            <>\r\n              <Line\r\n                key={i}\r\n                points={line.points}\r\n                stroke={line.color}\r\n                strokeWidth={5}\r\n                tension={0.5}\r\n                visible={line.visable}\r\n                lineCap=\"round\"\r\n                globalCompositeOperation={\r\n                  line.tool === \"eraser\" ? \"destination-out\" : \"source-over\"\r\n                }\r\n              />\r\n            </>\r\n          ))}\r\n        </Layer>\r\n      </Stage>\r\n      <HuePicker\r\n        className=\"picker_canvas\"\r\n        color={colorPen}\r\n        onChangeComplete={handleChangeComplete}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n"]},"metadata":{},"sourceType":"module"}