{"ast":null,"code":"import produce from 'immer';\nimport createReducer from './reducerUtils';\nconst initalStaste = {\n  name: '',\n  members: [],\n  // MemberLines:[],\n  namesArrayFromSocket: [],\n  disablesNames: []\n};\nconst contacts = {\n  setName(state, action) {\n    state.name = action.payload;\n  },\n\n  setName(state, action) {\n    state.name = action.payload;\n  },\n\n  setNamesArray(state, action) {\n    state.namesArrayFromSocket = action.payload;\n  },\n\n  setMembers(state, action) {\n    state.members.push(action.payload);\n  },\n\n  setDisableMember(state, action) {\n    console.log(\"member\", action.payload);\n    state.namesArrayFromSocket.find(member => {\n      if (member.name === action.payload) {\n        member.isDisable = !member.isDisable;\n        state.disablesNames.push(action.payload); // member.isDisable == true\n      }\n    });\n  },\n\n  setMemberLines(state, action) {//    if(state.MemberLines.exsit(action.payload))\n    //    {\n    //        state.MemberLines.splice(action.payload)\n    //    }\n    //   else\n    //   state.MemberLines.push(action.payload)\n  }\n\n};\nexport default _c2 = produce(_c = (state, action) => createReducer(state, action, contacts), initalStaste);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$produce\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Users/User/Desktop/canvas_client/drawing/src/components/redux/reducers/member.js"],"names":["produce","createReducer","initalStaste","name","members","namesArrayFromSocket","disablesNames","contacts","setName","state","action","payload","setNamesArray","setMembers","push","setDisableMember","console","log","find","member","isDisable","setMemberLines"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC,EADY;AAEjBC,EAAAA,OAAO,EAAC,EAFS;AAGjB;AACAC,EAAAA,oBAAoB,EAAC,EAJJ;AAKjBC,EAAAA,aAAa,EAAC;AALG,CAArB;AAQA,MAAMC,QAAQ,GAAG;AACZC,EAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACpBD,IAAAA,KAAK,CAACN,IAAN,GAAWO,MAAM,CAACC,OAAlB;AACH,GAHY;;AAIbH,EAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACnBD,IAAAA,KAAK,CAACN,IAAN,GAAWO,MAAM,CAACC,OAAlB;AACH,GANY;;AAObC,EAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACzBD,IAAAA,KAAK,CAACJ,oBAAN,GAA2BK,MAAM,CAACC,OAAlC;AACH,GATY;;AAUbE,EAAAA,UAAU,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACtBD,IAAAA,KAAK,CAACL,OAAN,CAAcU,IAAd,CAAmBJ,MAAM,CAACC,OAA1B;AACH,GAZY;;AAabI,EAAAA,gBAAgB,CAACN,KAAD,EAAQC,MAAR,EAAgB;AAC5BM,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBP,MAAM,CAACC,OAA5B;AACAF,IAAAA,KAAK,CAACJ,oBAAN,CAA2Ba,IAA3B,CAAiCC,MAAD,IAAU;AAClD,UAAGA,MAAM,CAAChB,IAAP,KAAcO,MAAM,CAACC,OAAxB,EAAgC;AAChCQ,QAAAA,MAAM,CAACC,SAAP,GAAiB,CAAED,MAAM,CAACC,SAA1B;AACAX,QAAAA,KAAK,CAACH,aAAN,CAAoBQ,IAApB,CAAyBJ,MAAM,CAACC,OAAhC,EAFgC,CAGhC;AAES;AAAC,KANF;AAOH,GAtBY;;AAuBbU,EAAAA,cAAc,CAACZ,KAAD,EAAQC,MAAR,EAAgB,CAC9B;AACA;AACA;AACA;AACA;AACA;AACC;;AA9BY,CAAjB;AAkCA,qBAAeV,OAAO,MAAC,CAACS,KAAD,EAAQC,MAAR,KAAmBT,aAAa,CAACQ,KAAD,EAAQC,MAAR,EAAgBH,QAAhB,CAAjC,EAA4DL,YAA5D,CAAtB","sourcesContent":["import produce from 'immer'\r\nimport createReducer from './reducerUtils'\r\n\r\nconst initalStaste = {\r\n    name:'',\r\n    members:[],\r\n    // MemberLines:[],\r\n    namesArrayFromSocket:[],\r\n    disablesNames:[]\r\n}\r\n\r\nconst contacts = {\r\n     setName(state, action) {\r\n        state.name=action.payload;   \r\n    },\r\n    setName(state, action) {\r\n        state.name=action.payload;   \r\n    },\r\n    setNamesArray(state, action) {\r\n        state.namesArrayFromSocket=action.payload;   \r\n    },\r\n    setMembers(state, action) {\r\n        state.members.push(action.payload);\r\n    },\r\n    setDisableMember(state, action) {\r\n        console.log(\"member\",action.payload);\r\n        state.namesArrayFromSocket.find((member)=>{\r\nif(member.name===action.payload){\r\nmember.isDisable=! member.isDisable;\r\nstate.disablesNames.push(action.payload)\r\n// member.isDisable == true\r\n\r\n        }});\r\n    },\r\n    setMemberLines(state, action) {\r\n    //    if(state.MemberLines.exsit(action.payload))\r\n    //    {\r\n    //        state.MemberLines.splice(action.payload)\r\n    //    }\r\n    //   else\r\n    //   state.MemberLines.push(action.payload)\r\n    },\r\n\r\n}\r\n\r\nexport default produce((state, action) => createReducer(state, action, contacts), initalStaste);\r\n\r\n"]},"metadata":{},"sourceType":"module"}