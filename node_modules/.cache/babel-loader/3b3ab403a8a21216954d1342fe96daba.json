{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\User\\\\Desktop\\\\canvas_client\\\\drawing\\\\src\\\\components\\\\canvas\\\\canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TwitterPicker } from 'react-color';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './canvas.css';\nimport { Stage, Layer, Line, Text } from 'react-konva';\nimport { socketRef } from '../socket/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Canvas() {\n  _s();\n\n  const [tool, setTool] = useState('pen');\n  const [disableMembers, setDisableMembers] = useState([]);\n  console.log(disableMembers, \"disableMembers\");\n  const [lines, setLines] = useState([]);\n  const [colorPen, setColorPen] = useState(\"#000000\");\n  const isDrawing = React.useRef(false);\n  const [shardDraw, setShardDraw] = useState();\n  var lastLine;\n  const names = useSelector(state => state.member.namesArrayFromSocket);\n  const name = useSelector(state => state.member.name);\n  useEffect(() => {\n    console.log(\"effect\");\n    names.map(member => {\n      if (member.isDisable == true) {\n        let disableMembersArray = disableMembers.concat(member.name);\n        console.log(\"ddd\", disableMembersArray);\n        setDisableMembers(disableMembersArray);\n      }\n    });\n  }, []);\n  socketRef.on(\"drawingListener\", lines => {\n    setLines(lines);\n    console.log(lines, \"lineson\");\n  });\n\n  const handleMouseDown = e => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    console.log(\"pos\", pos);\n    setLines([...lines, {\n      tool,\n      points: [pos.x, pos.y]\n    }]);\n  };\n\n  const handleMouseMove = e => {\n    console.log(\"dawn\"); // no drawing - skipping\n\n    if (!isDrawing.current) {\n      return;\n    }\n\n    const stage = e.target.getStage();\n    console.log(stage, 's');\n    const point = stage.getPointerPosition();\n    console.log(point, 'p');\n    lastLine = lines[lines.length - 1];\n    lastLine.color = colorPen;\n    lastLine.name = name;\n    console.log(lastLine, 'll'); // add point\n\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\n    setShardDraw(lastLine.points);\n    console.log(\"sendDraw\");\n    socketRef.emit(\"sendDraw\", lines); // event\n\n    console.log(lastLine.points, 'emit'); // replace last\n\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n    console.log(lines, 'lines');\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  const handleChangeComplete = color => {\n    console.log(\"ccc\", color.hex);\n    setColorPen(color.hex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Stage, {\n      className: \"stage_canvas\",\n      width: 120,\n      height: 200,\n      onMouseDown: handleMouseDown,\n      onMousemove: handleMouseMove,\n      onMouseup: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          text: \"Just start drawing\",\n          x: 5,\n          y: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), lines.map((line, i) => /*#__PURE__*/_jsxDEV(Line, {\n          points: line.points,\n          stroke: line.color,\n          strokeWidth: 5,\n          tension: 0.5,\n          lineCap: \"round\",\n          globalCompositeOperation: line.tool === 'eraser' ? 'destination-out' : 'source-over'\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TwitterPicker, {\n      className: \"picker_canvas\",\n      color: colorPen,\n      onChangeComplete: handleChangeComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Canvas, \"ah9rqJopThTgE1f7JC+aw/vww8A=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Canvas;\n;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["D:/Users/User/Desktop/canvas_client/drawing/src/components/canvas/canvas.js"],"names":["React","useState","useEffect","TwitterPicker","useSelector","useDispatch","Stage","Layer","Line","Text","socketRef","Canvas","tool","setTool","disableMembers","setDisableMembers","console","log","lines","setLines","colorPen","setColorPen","isDrawing","useRef","shardDraw","setShardDraw","lastLine","names","state","member","namesArrayFromSocket","name","map","isDisable","disableMembersArray","concat","on","handleMouseDown","e","current","pos","target","getStage","getPointerPosition","points","x","y","handleMouseMove","stage","point","length","color","emit","splice","handleMouseUp","handleChangeComplete","hex","line","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TwitterPicker } from 'react-color'\r\nimport {useSelector, useDispatch } from 'react-redux';\r\n\r\nimport './canvas.css'\r\n\r\nimport { Stage, Layer, Line, Text } from 'react-konva';\r\n\r\nimport { socketRef } from '../socket/socket';\r\n\r\nfunction Canvas() {\r\n  const [tool, setTool] = useState('pen');\r\n  const [disableMembers, setDisableMembers] = useState([])\r\n  console.log(disableMembers, \"disableMembers\")\r\n  const [lines, setLines] = useState([]);\r\n  const [colorPen, setColorPen] = useState(\"#000000\");\r\n  const isDrawing = React.useRef(false);\r\n  const [shardDraw, setShardDraw] = useState();\r\n  var lastLine;\r\n  const names=useSelector((state)=>state.member.namesArrayFromSocket)\r\n  const name=useSelector((state)=>state.member.name)\r\n  \r\n  useEffect(() => {\r\n    console.log(\"effect\")\r\n    names.map(member => {\r\n      if(member.isDisable == true){\r\n        let disableMembersArray = disableMembers.concat(member.name);\r\n        console.log(\"ddd\", disableMembersArray)\r\nsetDisableMembers(disableMembersArray)\r\n    }})\r\n  }, []);\r\n\r\n  socketRef.on(\"drawingListener\",(lines)=>{\r\n    setLines(lines)\r\n    console.log(lines,\"lineson\");\r\n    })\r\n\r\n  const handleMouseDown = (e) => {\r\n    isDrawing.current = true;\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    console.log(\"pos\",pos);\r\n    setLines([...lines, { tool, points: [pos.x, pos.y] }]);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n      console.log\r\n      (\"dawn\")\r\n    // no drawing - skipping\r\n    if (!isDrawing.current) {\r\n      return;\r\n    }\r\n    const stage = e.target.getStage();\r\n    console.log(stage, 's')\r\n    const point = stage.getPointerPosition();\r\n    console.log(point, 'p')\r\n\r\n    lastLine = lines[lines.length - 1];\r\n    lastLine.color = colorPen;\r\n    lastLine.name=name;\r\n    console.log(lastLine, 'll')\r\n\r\n    // add point\r\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\r\n    setShardDraw(lastLine.points)\r\n    console.log(\"sendDraw\");\r\n    socketRef.emit(\"sendDraw\", lines)\r\n    \r\n    // event\r\n    console.log(lastLine.points, 'emit')\r\n\r\n    // replace last\r\n    lines.splice(lines.length - 1, 1, lastLine);\r\n    setLines(lines.concat());\r\n    console.log(lines, 'lines');\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    isDrawing.current = false;\r\n  };\r\n\r\n const handleChangeComplete = (color) => {\r\n   console.log(\"ccc\", color.hex)\r\n    setColorPen(color.hex);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Stage \r\n      className=\"stage_canvas\"\r\n        width={120}\r\n        height={200}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n      >\r\n        <Layer>\r\n          <Text text=\"Just start drawing\" x={5} y={30} />\r\n          {lines.map((line, i) => (\r\n            <Line\r\n              key={i}\r\n              points={line.points}\r\n              stroke={line.color}\r\n              strokeWidth={5}\r\n              tension={0.5}\r\n              lineCap=\"round\"\r\n              globalCompositeOperation={\r\n                line.tool === 'eraser' ? 'destination-out' : 'source-over'\r\n              }\r\n            />\r\n          ))}\r\n        </Layer>\r\n      </Stage>\r\n      {/* <select\r\n        value={tool}\r\n        onChange={(e) => {\r\n          setTool(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"pen\">Pen</option>\r\n        <option value=\"eraser\">Eraser</option>\r\n      </select> */}\r\n      <TwitterPicker className=\"picker_canvas\" \r\n       color={ colorPen }\r\n       onChangeComplete={ handleChangeComplete }/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas"]},"metadata":{},"sourceType":"module"}