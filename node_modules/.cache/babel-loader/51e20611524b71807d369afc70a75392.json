{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\User\\\\Desktop\\\\canvas_client\\\\drawing\\\\src\\\\components\\\\canvas\\\\canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { HuePicker } from 'react-color';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './canvas.css';\nimport { Stage, Layer, Line, Text } from 'react-konva';\nimport { socketRef } from '../socket/socket';\nimport { actions } from '../redux/actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Canvas() {\n  _s();\n\n  const [tool, setTool] = useState('pen');\n  const [disableName, setDisableName] = useState(false);\n  let [lines, setLines] = useState([]);\n  console.log(\"lala\", lines);\n  const [colorPen, setColorPen] = useState(\"#000000\");\n  const isDrawing = React.useRef(false);\n  const [shardDraw, setShardDraw] = useState();\n  var lastLine;\n  const name = useSelector(state => state.member.name);\n  const disablesNames = useSelector(state => state.member.disablesNames);\n  console.log(\"theArr\", disablesNames);\n  const dispatch = useDispatch();\n  socketRef.on(\"drawingListener\", lines1 => {\n    setLines(lines1);\n  });\n\n  const handleMouseDown = e => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    console.log(\"pos\", pos);\n    setLines([...lines, {\n      tool,\n      points: [pos.x, pos.y]\n    }]);\n  };\n\n  const handleMouseMove = e => {\n    console.log(\"dawn\"); // no drawing - skipping\n\n    if (!isDrawing.current) {\n      return;\n    }\n\n    const stage = e.target.getStage();\n    console.log(stage, 's');\n    const point = stage.getPointerPosition();\n    console.log(point, 'p');\n    lastLine = lines[lines.length - 1];\n    lastLine.color = colorPen;\n    lastLine.name = name;\n    console.log(lastLine, 'll'); // add point\n\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\n    setShardDraw(lastLine.points);\n    console.log(\"sendDraw\");\n    socketRef.emit(\"sendDraw\", lines); // event\n\n    console.log(lastLine.points, 'emit'); // replace last\n\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n    console.log(lines, 'lines');\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  const handleChangeComplete = color => {\n    console.log(\"ccc\", color.hex);\n    setColorPen(color.hex);\n  }; //   let justLines=[];\n  //   useEffect(() => {\n  //     console.log(\"useee\")\n  //    justLines = lines.map((line, i) => ( \n  //     disablesNames.map((disabledName)=> {\n  // if(disabledName == line.name){\n  //   justLines.push(line) \n  // }})\n  //    )) \n  //   console.log(justLines, \"justLines\")\n  //   // lines = justLines\n  // }, [disablesNames])\n  // console.log(justLines, \"justLines\")\n\n\n  const checkVisibleName = name => {\n    disablesNames.map(disable => {\n      if (disable === name) {\n        setDisableName(true);\n      } else {\n        setDisableName(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select_canvas\",\n      value: tool,\n      onChange: e => {\n        setTool(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pen\",\n        children: \"Pen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"eraser\",\n        children: \"Eraser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Stage, {\n      className: \"stage_canvas\",\n      width: 120,\n      height: 200,\n      onMouseDown: handleMouseDown,\n      onMousemove: handleMouseMove,\n      onMouseup: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          text: \"Just start drawing\",\n          x: 5,\n          y: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), lines.map((line, i) => /*#__PURE__*/_jsxDEV(Line, {\n          points: line.points,\n          stroke: line.color,\n          strokeWidth: 5,\n          tension: 0.5,\n          lineCap: \"round\",\n          visible: (checkVisibleName(line.name), disableName == true ? false : true),\n          globalCompositeOperation: line.tool === 'eraser' ? 'destination-out' : 'source-over'\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HuePicker, {\n      className: \"picker_canvas\",\n      color: colorPen,\n      onChangeComplete: handleChangeComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Canvas, \"9R+zwItfAIFR5yex6WLnxbo0+qs=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Canvas;\n;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["D:/Users/User/Desktop/canvas_client/drawing/src/components/canvas/canvas.js"],"names":["React","useState","useEffect","HuePicker","useSelector","useDispatch","Stage","Layer","Line","Text","socketRef","actions","Canvas","tool","setTool","disableName","setDisableName","lines","setLines","console","log","colorPen","setColorPen","isDrawing","useRef","shardDraw","setShardDraw","lastLine","name","state","member","disablesNames","dispatch","on","lines1","handleMouseDown","e","current","pos","target","getStage","getPointerPosition","points","x","y","handleMouseMove","stage","point","length","color","concat","emit","splice","handleMouseUp","handleChangeComplete","hex","checkVisibleName","map","disable","value","line","i"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { HuePicker } from 'react-color'\r\nimport {useSelector, useDispatch } from 'react-redux';\r\n\r\nimport './canvas.css'\r\n\r\nimport { Stage, Layer, Line, Text } from 'react-konva';\r\n\r\nimport { socketRef } from '../socket/socket';\r\nimport { actions } from '../redux/actions/actions';\r\n\r\n\r\nfunction Canvas() {\r\n  const [tool, setTool] = useState('pen');\r\n  const [disableName, setDisableName] = useState(false);\r\n  let [lines, setLines] = useState([]);\r\n  console.log(\"lala\", lines)\r\n  const [colorPen, setColorPen] = useState(\"#000000\");\r\n  const isDrawing = React.useRef(false);\r\n  const [shardDraw, setShardDraw] = useState();\r\n  var lastLine;\r\n  const name=useSelector((state)=>state.member.name)\r\n  const disablesNames=useSelector((state)=>state.member.disablesNames)\r\n  console.log(\"theArr\", disablesNames)\r\n  const dispatch=useDispatch();\r\n  \r\n  socketRef.on(\"drawingListener\",(lines1)=>{\r\n    setLines(lines1)\r\n    })\r\n\r\n  const handleMouseDown = (e) => {\r\n    isDrawing.current = true;\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    console.log(\"pos\",pos);\r\n setLines([...lines, { tool, points: [pos.x, pos.y] }]);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n      console.log\r\n      (\"dawn\")\r\n    // no drawing - skipping\r\n    if (!isDrawing.current) {\r\n      return;\r\n    }\r\n    const stage = e.target.getStage();\r\n    console.log(stage, 's')\r\n    const point = stage.getPointerPosition();\r\n    console.log(point, 'p')\r\n\r\n    lastLine = lines[lines.length - 1];\r\n    lastLine.color = colorPen;\r\n    lastLine.name=name;\r\n    console.log(lastLine, 'll')\r\n\r\n    // add point\r\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\r\n    setShardDraw(lastLine.points)\r\n    console.log(\"sendDraw\");\r\n    socketRef.emit(\"sendDraw\", lines)\r\n    \r\n    // event\r\n    console.log(lastLine.points, 'emit')\r\n\r\n    // replace last\r\n    lines.splice(lines.length - 1, 1, lastLine);\r\n  setLines(lines.concat());\r\n    console.log(lines, 'lines');\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    isDrawing.current = false;\r\n  };\r\n\r\n const handleChangeComplete = (color) => {\r\n   console.log(\"ccc\", color.hex)\r\n    setColorPen(color.hex);\r\n  };\r\n//   let justLines=[];\r\n//   useEffect(() => {\r\n//     console.log(\"useee\")\r\n//    justLines = lines.map((line, i) => ( \r\n//     disablesNames.map((disabledName)=> {\r\n// if(disabledName == line.name){\r\n//   justLines.push(line) \r\n// }})\r\n//    )) \r\n//   console.log(justLines, \"justLines\")\r\n//   // lines = justLines\r\n// }, [disablesNames])\r\n  // console.log(justLines, \"justLines\")\r\nconst checkVisibleName = (name) => {\r\n  disablesNames.map((disable => {\r\n    if(disable === name){\r\n      setDisableName(true)\r\n    }\r\n    else{\r\n      setDisableName(false)\r\n    }\r\n  }))\r\n}\r\n \r\n  return (\r\n    <div>\r\n       <select \r\n       className=\"select_canvas\"\r\n        value={tool}\r\n        onChange={(e) => {\r\n          setTool(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"pen\">Pen</option>\r\n        <option value=\"eraser\">Eraser</option>\r\n      </select>\r\n      <Stage \r\n      className=\"stage_canvas\"\r\n        width={120}\r\n        height={200}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n      >\r\n        <Layer>\r\n          <Text text=\"Just start drawing\" x={5} y={30} />\r\n        {lines.map((line, i) => (\r\n                      <Line\r\n                        key={i}\r\n                        points={line.points}\r\n                        stroke={line.color}\r\n                        strokeWidth={5}\r\n                        tension={0.5}\r\n                        lineCap=\"round\"\r\n                        visible={checkVisibleName(line.name), disableName == true? false: true}\r\n                        globalCompositeOperation={\r\n                          line.tool === 'eraser' ? 'destination-out' : 'source-over'\r\n                        }\r\n                      />\r\n                    ))} \r\n        </Layer>\r\n      </Stage>\r\n      <HuePicker className=\"picker_canvas\" \r\n       color={ colorPen }\r\n       onChangeComplete={ handleChangeComplete }/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas"]},"metadata":{},"sourceType":"module"}