{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\User\\\\Desktop\\\\canvas_client\\\\drawing\\\\src\\\\components\\\\members\\\\members.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react';\n// import ListGroup from 'react-bootstrap/ListGroup'\n// import {useSelector, useDispatch } from 'react-redux';\n// import { socketRef } from '../socket/socket';\n// import { actions } from '../redux/actions/actions';\n// function Members() {\n//     let isDisable=false;\n//     const dispatch=useDispatch();\n//     let [names,setNames]=useState([]);\n//     const setMembersToStore = (member) => {\n//         console.log(\"arrive\",member.name);\n//         dispatch(actions.setDisableMember(member.name))\n//         dispatch(actions.setLinesDisable(member.name))\n//       }\n//       socketRef.on(\"newMember\",(arrNames)=>{\n//           console.log(arrNames, \"arr\")\n//         setNames(arrNames);\n//     // dispatch(actions.setMembers({name:name,isDisable:false}));\n//         // setListMembers([...listMembers,{name}])\n//         // dispatch(actions.setMeers(name))\n//         })\n// //   const [listMembers, setListMembers] = useState([]);\n//   const members=useSelector((state)=>state.member.members)\n//   const name=useSelector((state)=>state.member.name)\n//   return ( <ListGroup as=\"ul\">\n//   {   names.map((member)=>{\n//       if(member.name!=name){   \n//       return(  \n//          <div> {member.isDisable\n//         ? <ListGroup.Item as=\"li\" \n//         style={{backgroundColor:'gray', cursor: 'pointer'}}  onClick={(e)=>{setMembersToStore(member)}} >\n//         {member.name}\n//        </ListGroup.Item>\n//        :<ListGroup.Item as=\"li\" \n//        style={{backgroundColor:'white', cursor: 'pointer'}}onClick={(e)=>{setMembersToStore(member)}} >\n//        {member.name}\n//       </ListGroup.Item>\n//     }</div>\n//     ) } })}\n// </ListGroup>\n//     );\n// }\n// export default Members;\nimport React, { useState } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { socketRef } from '../socket/socket';\nimport { actions } from '../redux/actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Members() {\n  _s();\n\n  let isDisable = false;\n  const dispatch = useDispatch();\n  let [names, setNames] = useState([]);\n\n  const setMembersToStore = member => {\n    console.log(\"arrive\", member.name);\n    dispatch(actions.setDisableMember(member.name));\n    dispatch(actions.setMemberLines(member.name));\n    dispatch(actions.setMemberToDisable(member.name));\n  };\n\n  const ableMember = () => {\n    dispatch(actions.setMemberToDisable());\n  };\n\n  socketRef.on(\"newMember\", arrNames => {\n    console.log(arrNames, \"arr\");\n    setNames(arrNames); // dispatch(actions.setMembers({name:name,isDisable:false}));\n    // setListMembers([...listMembers,{name}])\n    // dispatch(actions.setMeers(name))\n  }); //   const [listMembers, setListMembers] = useState([]);\n\n  const members = useSelector(state => state.member.members);\n  const name = useSelector(state => state.member.name);\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    as: \"ul\",\n    children: names.map(member => {\n      if (member.name != name) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", member.isDisable ? /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            as: \"li\",\n            style: {\n              backgroundColor: 'gray',\n              cursor: 'pointer'\n            },\n            onClick: (e => {\n              setMembersToStore(member);\n            }, () => ableMember()),\n            children: member.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            as: \"li\",\n            style: {\n              backgroundColor: 'white',\n              cursor: 'pointer'\n            },\n            onClick: e => {\n              setMembersToStore(member);\n            },\n            children: member.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 10\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Members, \"0M4AZq3IGTYPMs5Zd+4M7+V6DtE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Members;\nexport default Members;\n\nvar _c;\n\n$RefreshReg$(_c, \"Members\");","map":{"version":3,"sources":["D:/Users/User/Desktop/canvas_client/drawing/src/components/members/members.js"],"names":["React","useState","ListGroup","useSelector","useDispatch","socketRef","actions","Members","isDisable","dispatch","names","setNames","setMembersToStore","member","console","log","name","setDisableMember","setMemberLines","setMemberToDisable","ableMember","on","arrNames","members","state","map","backgroundColor","cursor","e"],"mappings":"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","sourcesContent":["// import React, { useState } from 'react';\r\n// import ListGroup from 'react-bootstrap/ListGroup'\r\n// import {useSelector, useDispatch } from 'react-redux';\r\n// import { socketRef } from '../socket/socket';\r\n// import { actions } from '../redux/actions/actions';\r\n\r\n\r\n// function Members() {\r\n//     let isDisable=false;\r\n//     const dispatch=useDispatch();\r\n//     let [names,setNames]=useState([]);\r\n\r\n//     const setMembersToStore = (member) => {\r\n//         console.log(\"arrive\",member.name);\r\n//         dispatch(actions.setDisableMember(member.name))\r\n//         dispatch(actions.setLinesDisable(member.name))\r\n\r\n//       }\r\n    \r\n        \r\n//       socketRef.on(\"newMember\",(arrNames)=>{\r\n//           console.log(arrNames, \"arr\")\r\n//         setNames(arrNames);\r\n\r\n//     // dispatch(actions.setMembers({name:name,isDisable:false}));\r\n\r\n//         // setListMembers([...listMembers,{name}])\r\n//         // dispatch(actions.setMeers(name))\r\n//         })\r\n\r\n// //   const [listMembers, setListMembers] = useState([]);\r\n//   const members=useSelector((state)=>state.member.members)\r\n//   const name=useSelector((state)=>state.member.name)\r\n  \r\n//   return ( <ListGroup as=\"ul\">\r\n//   {   names.map((member)=>{\r\n//       if(member.name!=name){   \r\n//       return(  \r\n//          <div> {member.isDisable\r\n//         ? <ListGroup.Item as=\"li\" \r\n//         style={{backgroundColor:'gray', cursor: 'pointer'}}  onClick={(e)=>{setMembersToStore(member)}} >\r\n//         {member.name}\r\n//        </ListGroup.Item>\r\n//        :<ListGroup.Item as=\"li\" \r\n//        style={{backgroundColor:'white', cursor: 'pointer'}}onClick={(e)=>{setMembersToStore(member)}} >\r\n//        {member.name}\r\n//       </ListGroup.Item>\r\n//     }</div>\r\n        \r\n//     ) } })}\r\n// </ListGroup>\r\n     \r\n \r\n//     );\r\n  \r\n// }\r\n\r\n// export default Members;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport { socketRef } from '../socket/socket';\r\nimport { actions } from '../redux/actions/actions';\r\n\r\n\r\nfunction Members() {\r\n    let isDisable=false;\r\n    const dispatch=useDispatch();\r\n    let [names,setNames]=useState([]);\r\n\r\n    const setMembersToStore = (member) => {\r\n        console.log(\"arrive\",member.name);\r\n        dispatch(actions.setDisableMember(member.name))\r\n        dispatch(actions.setMemberLines(member.name))\r\n        dispatch(actions.setMemberToDisable(member.name))\r\n      }\r\n\r\n      const ableMember = () =>{\r\n                  dispatch(actions.setMemberToDisable())\r\n      }\r\n    \r\n        \r\n      socketRef.on(\"newMember\",(arrNames)=>{\r\n          console.log(arrNames, \"arr\")\r\n        setNames(arrNames);\r\n\r\n    // dispatch(actions.setMembers({name:name,isDisable:false}));\r\n\r\n        // setListMembers([...listMembers,{name}])\r\n        // dispatch(actions.setMeers(name))\r\n        })\r\n\r\n//   const [listMembers, setListMembers] = useState([]);\r\n  const members=useSelector((state)=>state.member.members)\r\n  const name=useSelector((state)=>state.member.name)\r\n  \r\n  return ( <ListGroup as=\"ul\">\r\n  {   names.map((member)=>{\r\n      if(member.name!=name){   \r\n      return(\r\n         <div> {member.isDisable\r\n        ? <ListGroup.Item as=\"li\" style={{backgroundColor:'gray', cursor: 'pointer'}}  onClick={(e)=>{setMembersToStore(member)},\r\n        () => ableMember()} >\r\n        {member.name}\r\n       </ListGroup.Item>\r\n\r\n       :<ListGroup.Item as=\"li\" style={{backgroundColor:'white', cursor: 'pointer'}}  onClick={(e)=>{setMembersToStore(member)}} >\r\n       {member.name}\r\n      </ListGroup.Item>\r\n    }</div>\r\n        \r\n    ) } })}\r\n</ListGroup>\r\n     \r\n \r\n    );\r\n  \r\n}\r\n\r\nexport default Members;"]},"metadata":{},"sourceType":"module"}